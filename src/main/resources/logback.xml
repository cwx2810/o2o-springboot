<?xml version="1.0" encoding="UTF-8"?>
<!-- 定期扫描看我们的设置有没有变化，定期更新 -->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
	<!-- 定义日志参数常量 -->
	<!-- 日志级别 trace < debug < info < warn < error 定义在哪个级别，则日志只显示>=该级别的出错信息 -->
	<property name="log.level" value="debug"/>
	<!-- 日志最长保留30天 -->
	<property name="log.maxHistory" value="30"/>
	<!-- 日志存放位置，在tomcat根目录 -->
	<property name="log.filePath" value="${catalina.base}/logs/webapps"/>
	<!-- 日志格式：什么时间 什么线程执行的 什么debug级别 什么类 输出了什么信息 换行 -->
	<property name="log.pattern" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"/>

	<!-- 控制台输出 -->
	<appender name="consoleAppender" class="ch.qos.logback.core.ConsoleAppender">
		<!-- 定义日志字符串格式 -->
		<encoder>
			<pattern>${log.pattern}</pattern>
		</encoder>
	</appender>

	<!-- Debug输出，滚动输出新日志到文件中 -->
	<appender name="debugAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 文件路径 -->
		<file>${log.filePath}/debug.log</file>
		<!-- 日志滚动策略 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 文件名称 -->
			<fileNamePattern>${log.filePath}/debug/debug.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
			<maxHistory>${log.maxHistory}</maxHistory>
		</rollingPolicy>
		<!-- 定义日志字符串格式，将这些字符串输入到上面的文件中 -->
		<encoder>
			<pattern>${log.pattern}</pattern>
		</encoder>
		<!-- 设置过滤器，日志文件只保留Debug信息 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>DEBUG</level>
			<onMatch>ACCEPT</onMatch>
			<onMisMatch>DENY</onMisMatch>
		</filter>
	</appender>

	<!-- Info输出，滚动输出新日志到文件中 -->
	<appender name="infoAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 文件路径 -->
		<file>${log.filePath}/info.log</file>
		<!-- 日志滚动策略 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 文件名称 -->
			<fileNamePattern>${log.filePath}/info/info.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
			<maxHistory>${log.maxHistory}</maxHistory>
		</rollingPolicy>
		<!-- 定义日志字符串格式，将这些字符串输入到上面的文件中 -->
		<encoder>
			<pattern>${log.pattern}</pattern>
		</encoder>
		<!-- 设置过滤器，日志文件只保留Info信息 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>INFO</level>
			<onMatch>ACCEPT</onMatch>
			<onMisMatch>DENY</onMisMatch>
		</filter>
	</appender>

	<!-- Error输出，滚动输出新日志到文件中 -->
	<appender name="errorAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 文件路径 -->
		<file>${log.filePath}/error.log</file>
		<!-- 日志滚动策略 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 文件名称 -->
			<fileNamePattern>${log.filePath}/error/error.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
			<maxHistory>${log.maxHistory}</maxHistory>
		</rollingPolicy>
		<!-- 定义日志字符串格式，将这些字符串输入到上面的文件中 -->
		<encoder>
			<pattern>${log.pattern}</pattern>
		</encoder>
		<!-- 设置过滤器，日志文件只保留Error信息 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<onMatch>ACCEPT</onMatch>
			<onMisMatch>DENY</onMisMatch>
		</filter>
	</appender>
	<!-- 监听我们的工程 -->
	<logger name="com.imooc.o2o" level="${log.level}" additivity="true">
		<appender-ref ref="debugAppender"/>
		<appender-ref ref="infoAppender"/>
		<appender-ref ref="errorAppender"/>
	</logger>
	<root level="info">
		<appender-ref ref="consoleAppender"/>
	</root>
</configuration>